name: Build and Deploy to Yandex Cloud

on:
  push:
    branches:
      - main  # Runs on push to the main branch
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: ${{ secrets.YC_REGISTRY_ID }}
          CR_REPOSITORY: sphere-api
          IMAGE_TAG: latest
        run: |
          docker build --platform linux/amd64 -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy to Yandex Cloud VM
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Install YC CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "$HOME/yandex-cloud/bin" >> $GITHUB_PATH

      - name: Authenticate to Yandex Cloud
        run: |
          echo '${{ secrets.YC_SA_JSON_CREDENTIALS }}' > key.json
          echo '${{ secrets.YC_VM_PRIVATE_KEY }}' > key
          chmod 600 key

          yc config set service-account-key key.json
          yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
          yc config set folder-id ${{ secrets.YC_FOLDER_ID }}

      - name: SSH into Yandex Cloud VM and pull the latest Docker image
        run: |
          yc compute ssh --id ${{ secrets.YC_INSTANCE_ID }} -i key --login ${{ secrets.YC_VM_LOGIN }} << EOF
            curl --header Metadata-Flavor:Google 169.254.169.254/computeMetadata/v1/instance/service-accounts/default/token | \
            cut -f1 -d',' | \
            cut -f2 -d':' | \
            tr -d '"' | \
            docker login --username iam --password-stdin cr.yandex

            docker pull cr.yandex/${{ secrets.YC_REGISTRY_ID }}/sphere-api:latest
            docker stop sphere-api || true
            docker rm sphere-api || true
            docker run -d -p 8080:8080 --name sphere-api cr.yandex/${{ secrets.YC_REGISTRY_ID }}/sphere-api:latest
          EOF